services:
  photoview-ui:
    build:
      context: ..
      target: ui
      args:
        - UI_PUBLIC_URL=/photoview/
        - REACT_APP_API_ENDPOINT=https://${PHOTOVIEW_HOSTNAME}/photoview/api
    command: 
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    hostname: photoview-ui
    container_name: photoview-ui
    restart: unless-stopped
    stop_grace_period: 10s
    ports:
      - "8000:80"
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "${HOST_PHOTOVIEW_LOCATION}/storage:/home/photoview/media-cache"
      - "${HOST_PHOTOVIEW_MEDIA_ROOT}:/photos:ro"

  photoview-api:
    image: viktorstrate/photoview:master
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    hostname: photoview-api
    container_name: photoview-api
    restart: unless-stopped
    stop_grace_period: 10s
    ports:
      - "4001:4001"
    depends_on:
      mariadb:
        condition: service_healthy
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      PHOTOVIEW_SERVE_UI: "0"
      PHOTOVIEW_API_ENDPOINT: "https://${PHOTOVIEW_HOSTNAME}/photoview/api"
      PHOTOVIEW_LISTEN_PORT: "4001"
      PHOTOVIEW_DATABASE_DRIVER: ${PHOTOVIEW_DATABASE_DRIVER}
      PHOTOVIEW_MYSQL_URL: "${MARIADB_USER}:${MARIADB_PASSWORD}@tcp(photoview-mariadb)/${MARIADB_DATABASE}"
      PHOTOVIEW_LISTEN_IP: "photoview-api"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "${HOST_PHOTOVIEW_LOCATION}/storage:/home/photoview/media-cache"
      - "${HOST_PHOTOVIEW_MEDIA_ROOT}:/photos:ro"

  ## Watchtower upgrades services automatically (optional)
  watchtower:
    image: containrrr/watchtower:latest
    hostname: watchtower
    container_name: watchtower
    restart: unless-stopped
    environment:
      ## Comment out the next variable if you want Watchtower to auto-update all containers, running on the host,
      ## while now it will update only those with the label "com.centurylinklabs.watchtower.enable=true"
      WATCHTOWER_LABEL_ENABLE: true
      WATCHTOWER_CLEANUP: ${WATCHTOWER_CLEANUP}
      WATCHTOWER_POLL_INTERVAL: ${WATCHTOWER_POLL_INTERVAL}
      WATCHTOWER_TIMEOUT: ${WATCHTOWER_TIMEOUT}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "~/.docker/config.json:/config.json:ro" ## optional, for authentication if you have a Docker Hub account
      - "/etc/localtime:/etc/localtime:ro"      ## use local time from host
      - "/etc/timezone:/etc/timezone:ro"        ## use timezone from host

  ## Comment out the `mariadb` service if PHOTOVIEW_DATABASE_DRIVER is set to `sqlite` or `postgres` in the .env
  mariadb:
    image: mariadb:lts
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    hostname: photoview-mariadb
    container_name: photoview-mariadb
    restart: unless-stopped
    stop_grace_period: 5s
    ## Optimized MariaDB startup command for better performance and compatibility
    command: mariadbd --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    security_opt: ## see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    ## Uncomment next 2 lines if you want to access the database directly
    # ports:
      # - "3306:3306"
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    volumes:
      ## Example:
      ## - "/host/folder:/container/folder"
      - "/etc/localtime:/etc/localtime:ro" ## use local time from host
      - "/etc/timezone:/etc/timezone:ro"   ## use timezone from host
      - "${HOST_PHOTOVIEW_LOCATION}/database/mariadb:/var/lib/mysql" ## DO NOT REMOVE
    healthcheck:
      test: healthcheck.sh --connect --innodb_initialized
      interval: 1m
      timeout: 5s
      retries: 5
      start_period: 3m
